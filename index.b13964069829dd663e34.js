(()=>{"use strict";var t={};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var r=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=n}var e,r;return e=t,(r=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.append(t)}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupItem=e,this._closeButton=this._popupItem.querySelector(".popup__close"),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_handleCloseOverlay",value:function(t){t.target===t.currentTarget&&this.close()}},{key:"open",value:function(){this._popupItem.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupItem.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._closeButton.addEventListener("click",(function(){t.close()})),this._popupItem.addEventListener("click",(function(e){return t._handleCloseOverlay(e)}))}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=f(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},l.apply(this,arguments)}function s(t,e){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},s(t,e)}function f(t){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},f(t)}var p=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&s(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=f(r);if(o){var n=f(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e,n=t.popupSelector,r=t.submitForm;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,n))._submitForm=r,e._popupForm=e._popupItem.querySelector(".popup__form"),e._formList=e._popupForm.querySelectorAll(".popup__input"),e._submitButton=e._popupForm.querySelector(".popup__submit-button"),e}return e=u,(n=[{key:"setInputValues",value:function(t){this._formList.forEach((function(e){e.value=t[e.name]}))}},{key:"_getInputValues",value:function(){var t={};return this._formList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;l(f(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._submitForm(t._getInputValues())}))}},{key:"close",value:function(){l(f(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(u);function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},d.apply(this,arguments)}function m(t,e){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},m(t,e)}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}var v=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&m(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(r);if(o){var n=b(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===y(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupSelector=t,e._popupImage=e._popupItem.querySelector(".popup__image"),e._popupCaption=e._popupItem.querySelector(".popup__caption"),e}return e=u,(n=[{key:"open",value:function(t,e){this._popupImage.src=e,this._popupImage.alt=t,this._popupCaption.textContent=t,d(b(u.prototype),"open",this).call(this)}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(u);function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var g=function(){function t(e){var n=e.dataName,r=e.dataJob,o=e.avatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=n,this._jobElement=r,this._avatarElement=o}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{dataName:this._nameElement.textContent,dataJob:this._jobElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(t){var e=t.dataName,n=t.dataJob;this._nameElement.textContent=e,this._jobElement.textContent=n}},{key:"setProfileAvatar",value:function(t){this._avatarElement.src=t}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.p,t.p,t.p,t.p,t.p,t.p;var k=document.querySelector(".profile__edit"),w=document.querySelector(".popup_edit-profile"),E=(document.querySelector(".popup__close"),document.querySelector("#popup-form")),j=document.querySelector("#popup-form-card"),O=E.querySelector("#input-name"),P=E.querySelector("#input-job"),L=document.querySelector(".profile__info"),C=L.querySelector(".profile__name"),I=L.querySelector(".profile__aboute"),q=document.querySelector("#card-item-template"),T=document.querySelector(".elements"),B=document.querySelector(".popup_image-open"),R=(B.querySelector(".popup__image"),B.querySelector(".popup__caption"),document.querySelector(".profile__avatar")),U=document.querySelector(".popup_delelte-card"),x=document.querySelector(".popup_edit_avatar"),N=document.querySelector(".profile__avatar-container"),A=(document.querySelector(".popup__input_avatar"),document.querySelector("#submit-button-card")),D=document.querySelector("#submit-button-avatar"),F=document.querySelector("#submit-button-profile"),J=document.querySelector("#delete-submit-button"),V=document.querySelector(".profile__add-button"),H=document.querySelector(".popup-cards");function $(t){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$(t)}function G(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==$(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===$(o)?o:String(o)),r)}var o}H.querySelector("#card-name-discription"),H.querySelector("#card-link");var z=function(){function t(e,n,r,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userId=o,this._cardId=e._id,this._likes=e.likes,this._ownerId=e.owner._id,this._name=e.name,this._link=e.link,this._handleCardClick=r,this._createLike=i.createLike,this._deleteLike=i.deleteLike,this._container=n.content.querySelector(".element").cloneNode(!0),this._likeNumber=this._container.querySelector(".element__like-number"),this._likeButton=this._container.querySelector(".element__button-like"),this._cardTitle=this._container.querySelector(".element__title"),this._cardImage=this._container.querySelector(".element__photo"),this._buttonTrash=this._container.querySelector(".element__button-trash"),this._handleDeleteCard=i.deleteCardFunction}var e,n;return e=t,(n=[{key:"_setCardImage",value:function(){return this._cardImage=this._container.querySelector(".element__photo"),this._cardImage.setAttribute("src",this._link),this._cardImage.setAttribute("alt",this._name),this._cardImage}},{key:"_setCardTitle",value:function(){return this._cardTitle=this._container.querySelector(".element__title"),this._cardTitle.textContent=this._name,this._cardTitle}},{key:"_deleteButtonIsVisible",value:function(){this._userId!==this._ownerId&&(this._buttonTrash.style.visibility="hidden")}},{key:"deleteCard",value:function(){this._container.remove()}},{key:"_setEventListeners",value:function(){var t=this;this._cardImage.addEventListener("click",(function(){t._handleCardClick(t._name,t._link)})),this._buttonTrash.addEventListener("click",(function(){t._handleDeleteCard(t._cardId)})),this._likeButton.addEventListener("click",(function(){t._handleLikeClick()}))}},{key:"_setCardLikes",value:function(){this._likeNumber.textContent=this._likes.length}},{key:"_isLiked",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"showData",value:function(t){this._likes=t.likes,this._likeNumber.textContent=this._likes.length,this._isLiked()?this._likeButton.classList.add("element__button-like_active"):this._likeButton.classList.remove("element__button-like_active")}},{key:"_handleLikeClick",value:function(){this._isLiked()?this._deleteLike(this._cardId):this._createLike(this._cardId)}},{key:"getCard",value:function(){return this._setCardTitle(),this._setCardImage(),this._setEventListeners(),this._setCardLikes(),this._deleteButtonIsVisible(),this._isLiked()?this._likeButton.classList.add("element__button-like_active"):this._likeButton.classList.remove("element__button-like_active"),this._container}}])&&G(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function K(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==M(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===M(o)?o:String(o)),r)}var o}const Q=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._formButton=this._formElement.querySelector(this._config.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.classList.add(this._config.errorClass),e.textContent=t.validationMessage,t.classList.add(this._config.inputErrorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.classList.remove(this._config.errorClass),e.textContent="",t.classList.remove(this._config.inputErrorClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._formButton.classList.add(this._config.inactiveButtonClass),this._formButton.disabled=!0):(this._formButton.classList.remove(this._config.inactiveButtonClass),this._formButton.disabled=!1)}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))})),this._formElement.addEventListener("reset",(function(){setTimeout((function(){t.toggleButtonState()}),0)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&K(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function X(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==W(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==W(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===W(o)?o:String(o)),r)}var o}var Y=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl="https://mesto.nomoreparties.co/v1/cohort-60/",this._headers={authorization:"8449ac58-7a24-4246-806a-a59752bbc1d5","Content-Type":"application/json"}}var e,n;return e=t,n=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"updateUserAvatar",value:function(t){return fetch("".concat(this._baseUrl,"users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(t)}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"updateUserInfo",value:function(t){return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"createCard",value:function(t){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"cards/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"cards/likes/").concat(t),{method:"PUT",headers:this._headers}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"cards/likes/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){if(t.ok)return t.json()})).catch((function(t){console.log(t)}))}}],n&&X(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Z(t){return Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Z(t)}function tt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==Z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===Z(o)?o:String(o)),r)}var o}function et(){return et="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=rt(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},et.apply(this,arguments)}function nt(t,e){return nt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},nt(t,e)}function rt(t){return rt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},rt(t)}var ot,it=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&nt(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=rt(r);if(o){var n=rt(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Z(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),e=i.call(this,t),console.log(),e._submitButton=t.querySelector(".popup__submit-button"),e}return e=u,(n=[{key:"setEventListeners",value:function(){var t=this;et(rt(u.prototype),"setEventListeners",this).call(this),this._submitButton.addEventListener("click",(function(e){e.preventDefault(),t._handleSubmit()}))}},{key:"setSubmitHandler",value:function(t){this._handleSubmit=t}}])&&tt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(u),ut=new Y,ct=new it(U);function at(t){var e=new z(t,q,lt,ot,{createLike:function(t){ut.addLike(t).then((function(t){e.showData(t)})).catch((function(t){console.log(t)}))},deleteLike:function(t){ut.deleteLike(t).then((function(t){e.showData(t)})).catch((function(t){console.log(t)}))},deleteCardFunction:function(t){ct.open(),ct.setSubmitHandler((function(){ht(!0,J),ut.deleteCard(t).then((function(){e.deleteCard(),ct.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){ht(!1,J)}))}))}});return e.getCard()}function lt(t,e){st.open(t,e),st.setEventListeners()}ct.setEventListeners();var st=new v(B);st.setEventListeners();var ft=new r({renderer:function(t){ft.addItem(at(t))}},T),pt=new g({dataName:C,dataJob:I,avatar:R}),yt=new p({popupSelector:x,submitForm:function(t){ht(!0,D),ut.updateUserAvatar(t).then((function(t){pt.setProfileAvatar(t.avatar),yt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){ht(!1,D)}))}});function ht(t,e){e.textContent=t?"Сохранение...":"Сохранить"}yt.setEventListeners(),N.addEventListener("click",(function(){yt.open()})),ut.getUserInfo().then((function(t){ot=t._id,pt.setUserInfo({dataName:t.name,dataJob:t.about}),pt.setProfileAvatar(t.avatar),ut.getInitialCards().then((function(t){ft.renderItems(t)}))})).catch((function(t){console.log("Ошибка: ".concat(t))}));var dt=new p({popupSelector:H,submitForm:function(t){ht(!0,A),ut.createCard({name:t.cardName,link:t.cardLink}).then((function(t){ft.addItem(at(t)),dt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){ht(!1,A)}))}});dt.setEventListeners(),V.addEventListener("click",(function(){dt.open(),j.reset()})),k.addEventListener("click",(function(){var t;bt.open(),t=pt.getUserInfo(),O.value=t.dataName,P.value=t.dataJob,bt.open()}));var mt,bt=new p({popupSelector:w,submitForm:function(t){ht(!0,F),ut.updateUserInfo({name:t.dataName,about:t.dataJob}).then((function(t){pt.setUserInfo({dataName:t.name,dataJob:t.about}),bt.close()})).catch((function(t){console.log("Ошибка: ".concat(t))})).finally((function(){ht(!1,F)}))}});bt.setEventListeners(),mt={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",activeButtonClass:"popup__submit-button_valid",inactiveButtonClass:"popup__submit-button_invalid",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(mt.formSelector)).forEach((function(t){new Q(mt,t).enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,